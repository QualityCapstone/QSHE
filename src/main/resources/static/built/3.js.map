{"version":3,"sources":["webpack:///3.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/responsive/ResponsiveDefaults.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/map/ZoomControl.js"],"names":["webpackJsonp","245","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__charts_axes_AxisRenderer__","__WEBPACK_IMPORTED_MODULE_1__charts_axes_AxisRendererX__","__WEBPACK_IMPORTED_MODULE_2__charts_axes_AxisRendererY__","__WEBPACK_IMPORTED_MODULE_3__charts_axes_AxisRendererCircular__","__WEBPACK_IMPORTED_MODULE_4__charts_Chart__","__WEBPACK_IMPORTED_MODULE_5__charts_Legend__","__WEBPACK_IMPORTED_MODULE_6__charts_map_SmallMap__","__WEBPACK_IMPORTED_MODULE_7__charts_map_ZoomControl__","relevant","container","pixelWidth","pixelHeight","state","object","stateId","states","create","properties","minLabelPosition","maxLabelPosition","inside","disabled","layout","marginLeft","marginRight","position","marginTop","marginBottom","259","d","SmallMap","__WEBPACK_IMPORTED_MODULE_0__core_Container__","__WEBPACK_IMPORTED_MODULE_1__core_elements_Rectangle__","__WEBPACK_IMPORTED_MODULE_2__core_utils_List__","__WEBPACK_IMPORTED_MODULE_3__core_utils_Disposer__","__WEBPACK_IMPORTED_MODULE_4__core_Registry__","__WEBPACK_IMPORTED_MODULE_5__core_utils_Color__","__WEBPACK_IMPORTED_MODULE_6__core_utils_InterfaceColorSet__","__WEBPACK_IMPORTED_MODULE_7__core_utils_Utils__","__WEBPACK_IMPORTED_MODULE_8__core_utils_Type__","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","b","p","hasOwnProperty","__","constructor","prototype","_super","_this","call","_chart","className","align","valign","percentHeight","percentWidth","margin","interfaceColors","background","fillOpacity","fill","getFor","events","on","moveToPosition","updateMapSize","seriesContainer","createChild","shouldClone","rectangle","stroke","strokeWidth","strokeOpacity","verticalCenter","horizontalCenter","isMeasured","_disposers","push","applyTheme","get","_series","handleSeriesAdded","handleSeriesRemoved","enumerable","configurable","event","series","newValue","chart","contains","newSeries","clone","removeValue","dataUsers","parent","interactionsEnabled","invalidate","svgPoint","rectPoint","zoomLevel","scale","Math","min","x","y","geoPoint","svgPointToGeo","zoomToGeoPoint","set","updateRectangle","width","height","ceil","pixelX","pixelY","scaleRatio","afterDraw","moveTo","maskRectangle","processConfig","config","i","len","length","map","hasKey","getKey","registeredClasses","260","ZoomControl","__WEBPACK_IMPORTED_MODULE_1__core_elements_Button__","__WEBPACK_IMPORTED_MODULE_2__core_elements_RoundedRectangle__","__WEBPACK_IMPORTED_MODULE_4__core_utils_Keyboard__","__WEBPACK_IMPORTED_MODULE_5__core_interaction_Interaction__","__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__","__WEBPACK_IMPORTED_MODULE_7__core_Registry__","__WEBPACK_IMPORTED_MODULE_8__core_utils_InterfaceColorSet__","padding","plusButton","label","text","slider","handleBackgroundClick","updateThumbSize","thumb","draggable","handleThumbDrag","minusButton","role","readerLive","readerTitle","language","translate","property","fixLayout","undefined","toFront","toBack","minX","maxX","minY","maxY","sprite","target","spritePoint","maxPower","log","maxZoomLevel","LN2","minPower","minZoomLevel","power","pow","zoomGeoPoint","updateThumb","zoomOut","body","ev","topParent","hasFocused","isKey","isFocused","zoomIn","minHeight","visible","minWidth","isDown","step","stepCount","createBackground"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,GAC7C,IAAIC,GAA0DJ,EAAoB,IAC9EK,EAA2DL,EAAoB,IAC/EM,EAA2DN,EAAoB,IAC/EO,EAAkEP,EAAoB,KACtFQ,EAA8CR,EAAoB,IAClES,EAA+CT,EAAoB,KACnEU,EAAqDV,EAAoB,KCblGW,EAAAX,EAAA,IAwBAD,GAAA,UAQAa,SAAA,SAAAC,GACA,MAAAA,GAAAC,YAAA,KAAAD,EAAAE,aAAA,KAKAC,MAAA,SAAAC,EAAAC,GAEA,GAAAD,YAAAb,GAAA,GACA,GAAAY,GAAAC,EAAAE,OAAAC,OAAAF,EAGA,OAFAF,GAAAK,WAAAC,iBAAA,EACAN,EAAAK,WAAAE,iBAAA,EACAP,EAEA,eASAJ,SAAA,SAAAC,GACA,MAAAA,GAAAC,YAAA,KAKAE,MAAA,SAAAC,EAAAC,GAEA,GAAAD,YAAAX,GAAA,GACA,GAAAU,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAG,QAAA,EACAR,EAEA,GAAAC,YAAAV,GAAA,GACA,GAAAS,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAG,QAAA,EACAR,EAEA,GAAAC,YAAAP,GAAA,GACA,GAAAM,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAI,UAAA,EACAT,EAOA,GAAAC,YAAAN,GAAA,GACA,GAAAK,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAK,OAAA,WACAV,EAEA,GAAAC,YAAAT,GAAA,GACA,GAAAQ,GAAAC,EAAAE,OAAAC,OAAAF,EAGA,OAFAF,GAAAK,WAAAM,WAAA,EACAX,EAAAK,WAAAO,YAAA,EACAZ,EAEA,GAAAC,YAAAR,GAAA,YAAAQ,EAAAY,UAAA,SAAAZ,EAAAY,UAAA,CACA,GAAAb,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAQ,SAAA,SACAb,EAEA,eASAJ,SAAA,SAAAC,GACA,MAAAA,GAAAE,aAAA,KAKAC,MAAA,SAAAC,EAAAC,GAEA,GAAAD,YAAAZ,GAAA,GACA,GAAAW,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAG,QAAA,EACAR,EAEA,GAAAC,YAAAV,GAAA,GACA,GAAAS,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAG,QAAA,EACAR,EAEA,GAAAC,YAAAP,GAAA,GACA,GAAAM,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAI,UAAA,EACAT,EAOA,GAAAC,YAAAN,GAAA,GACA,GAAAK,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAK,OAAA,aACAV,EAEA,GAAAC,YAAAT,GAAA,GACA,GAAAQ,GAAAC,EAAAE,OAAAC,OAAAF,EAGA,OAFAF,GAAAK,WAAAS,UAAA,EACAd,EAAAK,WAAAU,aAAA,EACAf,EAEA,GAAAC,YAAAR,GAAA,cAAAQ,EAAAY,UAAA,OAAAZ,EAAAY,UAAA,CACA,GAAAb,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAQ,SAAA,QACAb,EAEA,eASAJ,SAAA,SAAAC,GACA,MAAAA,GAAAC,YAAA,KAAAD,EAAAE,aAAA,KAKAC,MAAA,SAAAC,EAAAC,GAEA,GAAAD,YAAAR,GAAA,GACA,GAAAO,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAI,UAAA,EACAT,EAEA,GAAAC,YAAAN,GAAA,GACA,GAAAK,GAAAC,EAAAE,OAAAC,OAAAF,EAEA,OADAF,GAAAK,WAAAI,UAAA,EACAT,EAEA,gBDuBMgB,IACA,SAAUlC,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBiC,EAAElC,EAAqB,IAAK,WAAa,MAAOmC,IAC9E,IAAIC,GAAgDnC,EAAoB,GACpEoC,EAAyDpC,EAAoB,IAC7EqC,EAAiDrC,EAAoB,GACrEsC,EAAqDtC,EAAoB,IACzEuC,EAA+CvC,EAAoB,GACnEwC,EAAkDxC,EAAoB,IACtEyC,EAA8DzC,EAAoB,GAClF0C,EAAkD1C,EAAoB,GEtN/F2C,EAAA3C,EAAA,GAGA4C,EAAAC,WAAAD,WAAA,WACA,GAAAE,GAAA7C,OAAA8C,iBACUC,uBAAgBC,QAAA,SAAAhB,EAAAiB,GAAsCjB,EAAAe,UAAAE,IAChE,SAAAjB,EAAAiB,GAAyB,OAAAC,KAAAD,KAAAE,eAAAD,KAAAlB,EAAAkB,GAAAD,EAAAC,IACzB,iBAAAlB,EAAAiB,GAEA,QAAAG,KAAuBR,KAAAS,YAAArB,EADvBa,EAAAb,EAAAiB,GAEAjB,EAAAsB,UAAA,OAAAL,EAAAjD,OAAAmB,OAAA8B,IAAAG,EAAAE,UAAAL,EAAAK,UAAA,GAAAF,QAkCAnB,EAAA,SAAAsB,GAKA,QAAAtB,KACA,GAAAuB,GAEAD,EAAAE,KAAAb,WAMAY,GAAAE,OAAA,GAAArB,GAAA,EACAmB,EAAAG,UAAA,WAEAH,EAAAI,MAAA,OACAJ,EAAAK,OAAA,SACAL,EAAAM,cAAA,GACAN,EAAAO,aAAA,GACAP,EAAAQ,OAAA,QACA,IAAAC,GAAA,GAAAzB,GAAA,CAEAgB,GAAAU,WAAAC,YAAA,GACAX,EAAAU,WAAAE,KAAAH,EAAAI,OAAA,cAEAb,EAAAc,OAAAC,GAAA,MAAAf,EAAAgB,eAAAhB,GACAA,EAAAc,OAAAC,GAAA,iBAAAf,EAAAiB,cAAAjB,GAEAA,EAAAkB,gBAAAlB,EAAAmB,YAAAzC,EAAA,GACAsB,EAAAkB,gBAAAE,aAAA,CAEA,IAAAC,GAAArB,EAAAmB,YAAAxC,EAAA,EAaA,OAZA0C,GAAAD,aAAA,EACAC,EAAAC,OAAAb,EAAAI,OAAA,yBACAQ,EAAAE,YAAA,EACAF,EAAAG,cAAA,GACAH,EAAAT,KAAApE,OAAAuC,EAAA,KACAsC,EAAAI,eAAA,SACAJ,EAAAK,iBAAA,SACAL,EAAAM,YAAA,EACA3B,EAAAqB,YACArB,EAAA4B,WAAAC,KAAA7B,EAAAE,QAEAF,EAAA8B,aACA9B,EAiJA,MA9LAb,GAAAV,EAAAsB,GA+CAvD,OAAAC,eAAAgC,EAAAqB,UAAA,UAOAiC,IAAA,WAMA,MALA3C,MAAA4C,UACA5C,KAAA4C,QAAA,GAAApD,GAAA,EACAQ,KAAA4C,QAAAlB,OAAAC,GAAA,SAAA3B,KAAA6C,kBAAA7C,MACAA,KAAA4C,QAAAlB,OAAAC,GAAA,SAAA3B,KAAA8C,oBAAA9C,OAEAA,KAAA4C,SAEAG,YAAA,EACAC,cAAA,IAOA3D,EAAAqB,UAAAmC,kBAAA,SAAAI,GACA,GAAAC,GAAAD,EAAAE,QACA,IAAAnD,KAAAoD,MAAAF,OAAAG,SAAAH,GAAA,CACA,GAAAI,GAAAJ,EAAAK,OACAvD,MAAA4C,QAAAY,YAAAN,GACAlD,KAAA4C,QAAAH,KAAAa,GACAJ,EAAAI,EACAtD,KAAAoD,MAAAK,UAAAhB,KAAAa,GAEAJ,EAAAE,MAAApD,KAAAoD,MACAF,EAAAQ,OAAA1D,KAAA8B,gBACAoB,EAAAS,qBAAA,GAOAtE,EAAAqB,UAAAoC,oBAAA,SAAAG,GAEAjD,KAAA4D,cAQAvE,EAAAqB,UAAAkB,eAAA,SAAAqB,GACA,GAAAY,GAAAZ,EAAAY,SACAC,EAAAjE,EAAA,iBAAAgE,EAAA7D,KAAAiC,WACA8B,EAAA/D,KAAAoD,MAAAW,UACAC,EAAAC,KAAAC,IAAAlE,KAAAmB,aAAAnB,KAAAkB,eAAA,IACAiD,GAAAL,EAAAK,EAAAnE,KAAAiC,UAAAhE,WAAA,GAAA+F,EAAAD,EACAK,GAAAN,EAAAM,EAAApE,KAAAiC,UAAA/D,YAAA,GAAA8F,EAAAD,EACAM,EAAArE,KAAAoD,MAAAkB,eAAiDH,IAAAC,KACjDpE,MAAAoD,MAAAmB,eAAAF,EAAArE,KAAAoD,MAAAW,WAAA,IAEA3G,OAAAC,eAAAgC,EAAAqB,UAAA,SAIAiC,IAAA,WACA,MAAA3C,MAAAc,OAAA6B,OAOA6B,IAAA,SAAApB,GACApD,KAAAoD,UACApD,KAAAc,OAAA0D,IAAApB,EAAA,GAAA3D,GAAA,GACA2D,EAAA1B,OAAAC,GAAA,mBAAA3B,KAAAyE,gBAAAzE,MACAoD,EAAA1B,OAAAC,GAAA,qBAAA3B,KAAAyE,gBAAAzE,MACAoD,EAAA1B,OAAAC,GAAA,oBAAA3B,KAAA6B,cAAA7B,UAIA+C,YAAA,EACAC,cAAA,IAOA3D,EAAAqB,UAAA+D,gBAAA,WACA,GAAArB,GAAApD,KAAAoD,MACAW,EAAAX,EAAAW,UACA9B,EAAAjC,KAAAiC,SACAA,GAAAyC,MAAA1E,KAAA/B,WAAA8F,EACA9B,EAAA0C,OAAA3E,KAAA9B,YAAA6F,CACA,IAAAC,GAAAC,KAAAC,IAAAlE,KAAAmB,aAAAnB,KAAAkB,eAAA,IACAY,EAAAsB,EAAAtB,gBACAqC,EAAAF,KAAAW,MAAAb,EAAAjC,EAAA7D,WAAA,EAAA6D,EAAA+C,QAAAb,EAAAD,EAAA9B,EAAAhE,WAAA,GACAmG,EAAAH,KAAAW,MAAAb,EAAAjC,EAAA5D,YAAA,EAAA4D,EAAAgD,QAAAd,EAAAD,EAAA9B,EAAA/D,YAAA,EACA+D,GAAAkC,IACAlC,EAAAmC,KAQA/E,EAAAqB,UAAAmB,cAAA,WACA7B,KAAAoD,QACApD,KAAA8B,gBAAAkC,MAAAhE,KAAAoD,MAAA2B,WAAAd,KAAAC,IAAAlE,KAAAmB,aAAAnB,KAAAkB,eAAA,IACAlB,KAAAgF,cAMA3F,EAAAqB,UAAAsE,UAAA,WACArE,EAAAD,UAAAsE,UAAAnE,KAAAb,MACAA,KAAA8B,gBAAAmD,QAAqCd,EAAAnE,KAAA/B,WAAA,EAAAmG,EAAApE,KAAA9B,YAAA,IACrC8B,KAAAiC,UAAAiD,eAAwCf,GAAA,EAAAC,GAAA,EAAAM,MAAAT,KAAAW,KAAA5E,KAAA/B,WAAA,GAAA0G,OAAAV,KAAAW,KAAA5E,KAAA9B,YAAA,KAQxCmB,EAAAqB,UAAAyE,cAAA,SAAAC,GACA,GAAAA,GAEAtF,EAAA,SAAAsF,EAAAlC,SAAApD,EAAA,QAAAsF,EAAAlC,QACA,OAAAmC,GAAA,EAAAC,EAAAF,EAAAlC,OAAAqC,OAA2DF,EAAAC,EAASD,IAAA,CACpE,GAAAnC,GAAAkC,EAAAlC,OAAAmC,EACAvF,GAAA,SAAAoD,IAAApD,EAAA,SAAAoD,IAAAlD,KAAAwF,IAAAC,OAAAvC,KACAkC,EAAAlC,OAAAmC,GAAArF,KAAAwF,IAAAE,OAAAxC,IAKAvC,EAAAD,UAAAyE,cAAAtE,KAAAb,KAAAoF,IAEA/F,GACCC,EAAA,EAQDI,GAAA,EAAAiG,kBAAA,SAAAtG,GF6NMuG,IACA,SAAU3I,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBiC,EAAElC,EAAqB,IAAK,WAAa,MAAO2I,IAC9E,IAAIvG,GAAgDnC,EAAoB,GACpE2I,EAAsD3I,EAAoB,IAC1E4I,EAAgE5I,EAAoB,IACpFsC,EAAqDtC,EAAoB,IACzE6I,EAAqD7I,EAAoB,IACzE8I,EAA8D9I,EAAoB,IAClF+I,EAAoD/I,EAAoB,GACxEgJ,EAA+ChJ,EAAoB,GG7d5FiJ,EAAAjJ,EAAA,GAGA4C,EAAAC,WAAAD,WAAA,WACA,GAAAE,GAAA7C,OAAA8C,iBACUC,uBAAgBC,QAAA,SAAAhB,EAAAiB,GAAsCjB,EAAAe,UAAAE,IAChE,SAAAjB,EAAAiB,GAAyB,OAAAC,KAAAD,KAAAE,eAAAD,KAAAlB,EAAAkB,GAAAD,EAAAC,IACzB,iBAAAlB,EAAAiB,GAEA,QAAAG,KAAuBR,KAAAS,YAAArB,EADvBa,EAAAb,EAAAiB,GAEAjB,EAAAsB,UAAA,OAAAL,EAAAjD,OAAAmB,OAAA8B,IAAAG,EAAAE,UAAAL,EAAAK,UAAA,GAAAF,QA+BAqF,EAAA,SAAAlF,GAKA,QAAAkF,KACA,GAAAjF,GAAAD,EAAAE,KAAAb,WAMAY,GAAAE,OAAA,GAAArB,GAAA,EACAmB,EAAAG,UAAA,cACAH,EAAAI,MAAA,QACAJ,EAAAK,OAAA,SACAL,EAAA/B,OAAA,WACA+B,EAAAyF,QAAA,QACA,IAAAhF,GAAA,GAAA+E,GAAA,EACAE,EAAA1F,EAAAmB,YAAA+D,EAAA,EACAQ,GAAAtE,aAAA,EACAsE,EAAAC,MAAAC,KAAA,IACAF,EAAA5B,MAAAtH,OAAA8I,EAAA,QACAI,EAAAD,QAAA,SACAzF,EAAA0F,YACA,IAAAG,GAAA7F,EAAAmB,YAAAzC,EAAA,EACAmH,GAAAzE,aAAA,EACAyE,EAAA/B,MAAAtH,OAAA8I,EAAA,QACAO,EAAAnF,WAAAE,KAAAH,EAAAI,OAAA,yBACAgF,EAAAnF,WAAAC,YAAA,IACAkF,EAAAnF,WAAAI,OAAAC,GAAA,MAAAf,EAAA8F,sBAAA9F,GACA6F,EAAA/E,OAAAC,GAAA,cAAAf,EAAA+F,gBAAA/F,GACAA,EAAA6F,QACA,IAAAG,GAAAH,EAAA1E,YAAA+D,EAAA,EACAc,GAAA5E,aAAA,EACA4E,EAAAP,QAAA,SACAO,EAAAC,WAAA,EACAD,EAAAlF,OAAAC,GAAA,OAAAf,EAAAkG,gBAAAlG,GACAA,EAAAgG,OACA,IAAAG,GAAAnG,EAAAmB,YAAA+D,EAAA,EAoBA,OAnBAiB,GAAA/E,aAAA,EACA+E,EAAAR,MAAAC,KAAA,IACAO,EAAAV,QAAA,SACAzF,EAAAmG,cAEAnG,EAAAgG,MAAAI,KAAA,SACApG,EAAAgG,MAAAK,WAAA,SAEArG,EAAAgG,MAAAM,YAAAtG,EAAAuG,SAAAC,UAAA,qCACAxG,EAAAmG,YAAAG,YAAAtG,EAAAuG,SAAAC,UAAA,0BACAxG,EAAA0F,WAAAY,YAAAtG,EAAAuG,SAAAC,UAAA,2BACAxG,EAAA8B,aACA9B,EAAAc,OAAAC,GAAA,2BAAAsB,GACA,UAAAA,EAAAoE,UACAzG,EAAA0G,cAGA1G,EAAA4B,WAAAC,KAAA7B,EAAAE,QACAF,EAAA0G,YACA1G,EAgMA,MA1PAb,GAAA8F,EAAAlF,GA4DAkF,EAAAnF,UAAA4G,UAAA,WACA,YAAAtH,KAAAnB,QACAmB,KAAA0E,MAAA,GACA1E,KAAA2E,WAAA4C,GACAvH,KAAA+G,YAAArC,MAAAtH,OAAA8I,EAAA,QACAlG,KAAA4G,MAAAlC,MAAAtH,OAAA8I,EAAA,QACAlG,KAAAsG,WAAA5B,MAAAtH,OAAA8I,EAAA,QACAlG,KAAAyG,OAAA/B,MAAAtH,OAAA8I,EAAA,QACAlG,KAAA+G,YAAA9H,UAAA,EACAe,KAAAsG,WAAApH,aAAA,EACAc,KAAAyG,OAAA9B,OAAA,EACA3E,KAAA+G,YAAAS,UACAxH,KAAAsG,WAAAmB,SACAzH,KAAA4G,MAAAc,KAAA,EACA1H,KAAA4G,MAAAe,KAAA,EACA3H,KAAA4G,MAAAgB,KAAA,GAEA,cAAA5H,KAAAnB,SACAmB,KAAA4G,MAAAc,KAAA,EACA1H,KAAA4G,MAAAgB,KAAA,EACA5H,KAAA4G,MAAAiB,KAAA,EACA7H,KAAA2E,OAAA,GACA3E,KAAA0E,UAAA6C,GACAvH,KAAA+G,YAAApC,OAAAvH,OAAA8I,EAAA,QACAlG,KAAA+G,YAAArC,MAAA,GACA1E,KAAA4G,MAAAjC,OAAAvH,OAAA8I,EAAA,QACAlG,KAAA4G,MAAAlC,UAAA6C,GACAvH,KAAAsG,WAAA3B,OAAAvH,OAAA8I,EAAA,QACAlG,KAAAsG,WAAA5B,MAAA,GACA1E,KAAAyG,OAAA9B,OAAAvH,OAAA8I,EAAA,QACAlG,KAAAyG,OAAA/B,MAAA,EACA1E,KAAA+G,YAAAjI,WAAA,EACAkB,KAAAsG,WAAAvH,YAAA,EACAiB,KAAA+G,YAAAU,SACAzH,KAAAsG,WAAAkB,YASA3B,EAAAnF,UAAAgG,sBAAA,SAAAzD,GACA,GAAA6E,GAAA7E,EAAA8E,OACA3D,EAAAnB,EAAA+E,YAAA5D,EACAhB,EAAApD,KAAAoD,MACA6E,EAAAhE,KAAAiE,IAAA9E,EAAA+E,cAAAlE,KAAAmE,IACAC,EAAApE,KAAAiE,IAAA9E,EAAAkF,cAAArE,KAAAmE,IACAG,GAAAT,EAAA5J,YAAAkG,GAAA0D,EAAA5J,aAAAmK,GAAAJ,EAAAI,IACAtE,EAAAE,KAAAuE,IAAA,EAAAD,EACAnF,GAAAmB,eAAAnB,EAAAqF,aAAA1E,IAEA3G,OAAAC,eAAAwI,EAAAnF,UAAA,SAIAiC,IAAA,WACA,MAAA3C,MAAAc,OAAA6B,OAOA6B,IAAA,SAAApB,GACA,GAAAxC,GAAAZ,IACAA,MAAAc,OAAA0D,IAAApB,EAAA,GAAA3D,GAAA,GACA2D,EAAA1B,OAAAC,GAAA,iBAAA3B,KAAA2G,gBAAA3G,MACAoD,EAAA1B,OAAAC,GAAA,mBAAA3B,KAAA0I,YAAA1I,MACAA,KAAA+G,YAAArF,OAAAC,GAAA,iBAA+DyB,EAAAuF,QAAAvF,EAAAqF,eAAqCrF,GACpGhG,OAAA6I,EAAA,KAAA2C,KAAAlH,OAAAC,GAAA,iBAAAkH,GACAjI,EAAAkI,UAAAC,aACA/C,EAAA,EAAAgD,MAAAH,EAAA5F,MAAA,SACArC,EAAAmG,YAAAkC,UACA7F,EAAAuF,UAEA/H,EAAA0F,WAAA2C,WACA7F,EAAA8F,SAGAlD,EAAA,EAAAgD,MAAAH,EAAA5F,MAAA,QACAG,EAAA8F,SAEAlD,EAAA,EAAAgD,MAAAH,EAAA5F,MAAA,UACAG,EAAAuF,YAGiBvF,GACjBpD,KAAAsG,WAAA5E,OAAAC,GAAA,iBAA8DyB,EAAA8F,OAAA9F,EAAAqF,eAAoCrF,OAGlGL,YAAA,EACAC,cAAA,IAOA6C,EAAAnF,UAAAiG,gBAAA,WACA,GAAAvD,GAAApD,KAAAoD,KACA,IAAAA,EAAA,CACA,GAAAqD,GAAAzG,KAAAyG,OACAG,EAAA5G,KAAA4G,KACA,aAAA5G,KAAAnB,QACA+H,EAAAuC,UAAAlF,KAAAC,IAAAlE,KAAAyG,OAAAvI,YAAA,IACA0I,EAAAjC,OAAA8B,EAAAvI,aAAAkF,EAAA+E,aAAA/E,EAAAkF,cACA1B,EAAAiB,KAAApB,EAAAvI,YAAA0I,EAAA1I,YACA0I,EAAA1I,aAAA,EACA0I,EAAAwC,SAAA,EAGAxC,EAAAwC,SAAA,IAIAxC,EAAAyC,SAAApF,KAAAC,IAAAlE,KAAAyG,OAAAxI,WAAA,IACA2I,EAAAlC,MAAA+B,EAAAxI,YAAAmF,EAAA+E,aAAA/E,EAAAkF,cACA1B,EAAAe,KAAAlB,EAAAxI,WAAA2I,EAAA3I,WACA2I,EAAA3I,YAAA,EACA2I,EAAAwC,SAAA,EAGAxC,EAAAwC,SAAA,KAUAvD,EAAAnF,UAAAgI,YAAA,WACA,GAAAjC,GAAAzG,KAAAyG,OACArD,EAAApD,KAAAoD,MACAwD,EAAA5G,KAAA4G,KACA,KAAAA,EAAA0C,OAAA,CACA,GAAAC,GAAAtF,KAAAiE,IAAA9E,EAAAW,WAAAE,KAAAmE,GACA,aAAApI,KAAAnB,OACA+H,EAAAxC,EAAAqC,EAAAvI,aAAAuI,EAAAvI,YAAA0I,EAAA1I,cAAAqL,EAAA,GAAAvJ,KAAAwJ,UAGA5C,EAAAzC,EAAAsC,EAAAxI,WAAAsL,EAAAvJ,KAAAwJ,YASA3D,EAAAnF,UAAAoG,gBAAA,WACA,GAGAyC,GAHA9C,EAAAzG,KAAAyG,OACArD,EAAApD,KAAAoD,MACAwD,EAAA5G,KAAA4G,KAGA2C,GADA,YAAAvJ,KAAAnB,OACAmB,KAAAwJ,WAAA/C,EAAAvI,YAAA0I,EAAA9B,OAAA8B,EAAA1I,cAAAuI,EAAAvI,YAAA0I,EAAA1I,aAAA,EAGA8B,KAAAwJ,UAAA5C,EAAA/B,OAAA4B,EAAAxI,UAEA,IAAA8F,GAAAE,KAAAuE,IAAA,EAAAe,EACAnG,GAAAmB,mBAAAgD,GAAAxD,GAAA,MAEA3G,OAAAC,eAAAwI,EAAAnF,UAAA,aAQAiC,IAAA,WACA,MAAAsB,MAAAiE,IAAAlI,KAAAoD,MAAA+E,cAAAlE,KAAAmE,IAAAnE,KAAAiE,IAAAlI,KAAAoD,MAAAkF,cAAArE,KAAAmE,KAEArF,YAAA,EACAC,cAAA,IAQA6C,EAAAnF,UAAA+I,iBAAA,WACA,UAAA1D,GAAA,GAEAF,GACCvG,EAAA,EAQD6G,GAAA,EAAAR,kBAAA,YAAAE","file":"3.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 245:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__charts_axes_AxisRenderer__ = __webpack_require__(65);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__charts_axes_AxisRendererX__ = __webpack_require__(66);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__charts_axes_AxisRendererY__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__charts_axes_AxisRendererCircular__ = __webpack_require__(115);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__charts_Chart__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__charts_Legend__ = __webpack_require__(116);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__charts_map_SmallMap__ = __webpack_require__(259);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__charts_map_ZoomControl__ = __webpack_require__(260);\n/**\r\n * Defines default Responsive rules\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * RULES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Default rules.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Do not create states for objects that do not have any overrides\r\n */\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ([\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Microcharts and sparklines\r\n     * W<=100 || H<=100\r\n     * @todo\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 100) || (container.pixelHeight <= 100)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_0__charts_axes_AxisRenderer__[\"a\" /* AxisRenderer */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.minLabelPosition = 1;\r\n                state.properties.maxLabelPosition = 0;\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Narrow\r\n     * W<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_2__charts_axes_AxisRendererY__[\"a\" /* AxisRendererY */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_3__charts_axes_AxisRendererCircular__[\"a\" /* AxisRendererCircular */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_6__charts_map_SmallMap__[\"a\" /* SmallMap */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            /*if (object instanceof Container && object.parent instanceof ZoomControl && !(object instanceof Button)) {\r\n                let state = object.states.create(stateId);\r\n                state.properties.height = 0;\r\n                return state;\r\n            }*/\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_7__charts_map_ZoomControl__[\"a\" /* ZoomControl */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.layout = \"vertical\";\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_4__charts_Chart__[\"a\" /* Chart */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.marginLeft = 0;\r\n                state.properties.marginRight = 0;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_5__charts_Legend__[\"a\" /* Legend */] && (object.position == \"left\" || object.position == \"right\")) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.position = \"bottom\";\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Short\r\n     * H<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelHeight <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_1__charts_axes_AxisRendererX__[\"a\" /* AxisRendererX */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_3__charts_axes_AxisRendererCircular__[\"a\" /* AxisRendererCircular */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_6__charts_map_SmallMap__[\"a\" /* SmallMap */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            /*if (object instanceof Container && object.parent instanceof ZoomControl && !(object instanceof Button)) {\r\n                let state = object.states.create(stateId);\r\n                state.properties.width = 100;\r\n                return state;\r\n            }*/\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_7__charts_map_ZoomControl__[\"a\" /* ZoomControl */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.layout = \"horizontal\";\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_4__charts_Chart__[\"a\" /* Chart */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.marginTop = 0;\r\n                state.properties.marginBottom = 0;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_5__charts_Legend__[\"a\" /* Legend */] && (object.position == \"bottom\" || object.position == \"top\")) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.position = \"right\";\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Super-small\r\n     * W<=200 && H<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 200) && (container.pixelHeight <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Hide legend\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_5__charts_Legend__[\"a\" /* Legend */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            if (object instanceof __WEBPACK_IMPORTED_MODULE_7__charts_map_ZoomControl__[\"a\" /* ZoomControl */]) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n]);\r\n//# sourceMappingURL=ResponsiveDefaults.js.map\n\n/***/ }),\n\n/***/ 259:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SmallMap; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Container__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_elements_Rectangle__ = __webpack_require__(64);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_utils_List__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_utils_Disposer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_Registry__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__core_utils_Color__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__core_utils_InterfaceColorSet__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__core_utils_Utils__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__core_utils_Type__ = __webpack_require__(1);\n/**\r\n * A module for the mini-map control.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"bird's eye\" view of the whole map.\r\n *\r\n * This control creates a mini-map with the whole of the map, highlighting\r\n * the area which is in the current viewport of the map map.\r\n *\r\n * @see {@link ISmallMapEvents} for a list of available events\r\n * @see {@link ISmallMapAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar SmallMap = /** @class */ (function (_super) {\r\n    __extends(SmallMap, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SmallMap() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A target map.\r\n         *\r\n         * @type {MutableValueDisposer<MapChart>}\r\n         */\r\n        _this._chart = new __WEBPACK_IMPORTED_MODULE_3__core_utils_Disposer__[\"d\" /* MutableValueDisposer */]();\r\n        _this.className = \"SmallMap\";\r\n        // Set defaults\r\n        _this.align = \"left\";\r\n        _this.valign = \"bottom\";\r\n        _this.percentHeight = 20;\r\n        _this.percentWidth = 20;\r\n        _this.margin(5, 5, 5, 5);\r\n        var interfaceColors = new __WEBPACK_IMPORTED_MODULE_6__core_utils_InterfaceColorSet__[\"a\" /* InterfaceColorSet */]();\r\n        // Set background defailts\r\n        _this.background.fillOpacity = 0.9;\r\n        _this.background.fill = interfaceColors.getFor(\"background\");\r\n        // Set up events\r\n        _this.events.on(\"hit\", _this.moveToPosition, _this);\r\n        _this.events.on(\"maxsizechanged\", _this.updateMapSize, _this);\r\n        // Create a container\r\n        _this.seriesContainer = _this.createChild(__WEBPACK_IMPORTED_MODULE_0__core_Container__[\"a\" /* Container */]);\r\n        _this.seriesContainer.shouldClone = false;\r\n        // Create an outline rectangle\r\n        var rectangle = _this.createChild(__WEBPACK_IMPORTED_MODULE_1__core_elements_Rectangle__[\"a\" /* Rectangle */]);\r\n        rectangle.shouldClone = false;\r\n        rectangle.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n        rectangle.strokeWidth = 1;\r\n        rectangle.strokeOpacity = 0.5;\r\n        rectangle.fill = Object(__WEBPACK_IMPORTED_MODULE_5__core_utils_Color__[\"c\" /* color */])(); //\"none\";\r\n        rectangle.verticalCenter = \"middle\";\r\n        rectangle.horizontalCenter = \"middle\";\r\n        rectangle.isMeasured = false;\r\n        _this.rectangle = rectangle;\r\n        _this._disposers.push(_this._chart);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SmallMap.prototype, \"series\", {\r\n        /**\r\n         * A list of map series used to draw the mini-map.\r\n         *\r\n         * @readonly\r\n         * @return {List<MapSeries>} Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new __WEBPACK_IMPORTED_MODULE_2__core_utils_List__[\"b\" /* List */]();\r\n                this._series.events.on(\"insert\", this.handleSeriesAdded, this);\r\n                this._series.events.on(\"remove\", this.handleSeriesRemoved, this);\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new series when they are pushed into a `series` list.\r\n     *\r\n     * @param {IListEvents<MapSeries>[\"insert\"]} event Event\r\n     */\r\n    SmallMap.prototype.handleSeriesAdded = function (event) {\r\n        var series = event.newValue;\r\n        if (this.chart.series.contains(series)) {\r\n            var newSeries = series.clone();\r\n            this._series.removeValue(series);\r\n            this._series.push(newSeries);\r\n            series = newSeries;\r\n            this.chart.dataUsers.push(newSeries);\r\n        }\r\n        series.chart = this.chart;\r\n        series.parent = this.seriesContainer;\r\n        series.interactionsEnabled = false;\r\n    };\r\n    /**\r\n     * Cleans up after series are removed from Scrollbar.\r\n     *\r\n     * @param {IListEvents<XYSeries>[\"remove\"]}  event  Event\r\n     */\r\n    SmallMap.prototype.handleSeriesRemoved = function (event) {\r\n        //let sourceSeries: MapSeries = event.oldValue;\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Moves main map pan position after click on the small map.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {AMEvent<Sprite, ISpriteEvents>[\"hit\"]}  event  Event\r\n     */\r\n    SmallMap.prototype.moveToPosition = function (event) {\r\n        var svgPoint = event.svgPoint;\r\n        var rectPoint = __WEBPACK_IMPORTED_MODULE_7__core_utils_Utils__[\"svgPointToSprite\"](svgPoint, this.rectangle);\r\n        var zoomLevel = this.chart.zoomLevel;\r\n        var scale = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n        var x = (rectPoint.x + this.rectangle.pixelWidth / 2) / scale * zoomLevel;\r\n        var y = (rectPoint.y + this.rectangle.pixelHeight / 2) / scale * zoomLevel;\r\n        var geoPoint = this.chart.svgPointToGeo({ x: x, y: y });\r\n        this.chart.zoomToGeoPoint(geoPoint, this.chart.zoomLevel, true);\r\n    };\r\n    Object.defineProperty(SmallMap.prototype, \"chart\", {\r\n        /**\r\n         * @return {MapChart} Chart/map\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart/map that this control is meant for.\r\n         *\r\n         * @param {MapChart}  chart  Chart/map\r\n         */\r\n        set: function (chart) {\r\n            if (this.chart != chart) {\r\n                this._chart.set(chart, new __WEBPACK_IMPORTED_MODULE_3__core_utils_Disposer__[\"c\" /* MultiDisposer */]([\r\n                    chart.events.on(\"zoomlevelchanged\", this.updateRectangle, this),\r\n                    chart.events.on(\"mappositionchanged\", this.updateRectangle, this),\r\n                    chart.events.on(\"scaleratiochanged\", this.updateMapSize, this)\r\n                ]));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the viewport recangle as per current map zoom/pan position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SmallMap.prototype.updateRectangle = function () {\r\n        var chart = this.chart;\r\n        var zoomLevel = chart.zoomLevel;\r\n        var rectangle = this.rectangle;\r\n        rectangle.width = this.pixelWidth / zoomLevel;\r\n        rectangle.height = this.pixelHeight / zoomLevel;\r\n        var scale = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n        var seriesContainer = chart.seriesContainer;\r\n        var x = Math.ceil((zoomLevel * seriesContainer.pixelWidth / 2 - seriesContainer.pixelX) * scale / zoomLevel + rectangle.pixelWidth / 2);\r\n        var y = Math.ceil((zoomLevel * seriesContainer.pixelHeight / 2 - seriesContainer.pixelY) * scale / zoomLevel + rectangle.pixelHeight / 2);\r\n        rectangle.x = x;\r\n        rectangle.y = y;\r\n    };\r\n    /**\r\n     * Update map size so that internal elements can redraw themselves after\r\n     * the size of the small map changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SmallMap.prototype.updateMapSize = function () {\r\n        if (this.chart) {\r\n            this.seriesContainer.scale = this.chart.scaleRatio * Math.min(this.percentWidth, this.percentHeight) / 100;\r\n            this.afterDraw();\r\n        }\r\n    };\r\n    /**\r\n     * Update elements after drawing the small map.\r\n     */\r\n    SmallMap.prototype.afterDraw = function () {\r\n        _super.prototype.afterDraw.call(this);\r\n        this.seriesContainer.moveTo({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 });\r\n        this.rectangle.maskRectangle = { x: -1, y: -1, width: Math.ceil(this.pixelWidth + 2), height: Math.ceil(this.pixelHeight + 2) };\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {object}  config  Config\r\n     */\r\n    SmallMap.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up series\r\n            if (__WEBPACK_IMPORTED_MODULE_8__core_utils_Type__[\"hasValue\"](config.series) && __WEBPACK_IMPORTED_MODULE_8__core_utils_Type__[\"isArray\"](config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    var series = config.series[i];\r\n                    if (__WEBPACK_IMPORTED_MODULE_8__core_utils_Type__[\"hasValue\"](series) && __WEBPACK_IMPORTED_MODULE_8__core_utils_Type__[\"isString\"](series) && this.map.hasKey(series)) {\r\n                        config.series[i] = this.map.getKey(series);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return SmallMap;\r\n}(__WEBPACK_IMPORTED_MODULE_0__core_Container__[\"a\" /* Container */]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n__WEBPACK_IMPORTED_MODULE_4__core_Registry__[\"b\" /* registry */].registeredClasses[\"SmallMap\"] = SmallMap;\r\n//# sourceMappingURL=SmallMap.js.map\n\n/***/ }),\n\n/***/ 260:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ZoomControl; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_Container__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_elements_Button__ = __webpack_require__(52);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_elements_RoundedRectangle__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_utils_Disposer__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_utils_Keyboard__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__core_interaction_Interaction__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__core_Registry__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__core_utils_InterfaceColorSet__ = __webpack_require__(9);\n/**\r\n * Zoom control module\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a control for zooming the map.\r\n *\r\n * @see {@link IZoomControlEvents} for a list of available events\r\n * @see {@link IZoomControlAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ZoomControl = /** @class */ (function (_super) {\r\n    __extends(ZoomControl, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ZoomControl() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A target map.\r\n         *\r\n         * @type {MutableValueDisposer<MapChart>}\r\n         */\r\n        _this._chart = new __WEBPACK_IMPORTED_MODULE_3__core_utils_Disposer__[\"d\" /* MutableValueDisposer */]();\r\n        _this.className = \"ZoomControl\";\r\n        _this.align = \"right\";\r\n        _this.valign = \"bottom\";\r\n        _this.layout = \"vertical\";\r\n        _this.padding(5, 5, 5, 5);\r\n        var interfaceColors = new __WEBPACK_IMPORTED_MODULE_8__core_utils_InterfaceColorSet__[\"a\" /* InterfaceColorSet */]();\r\n        var plusButton = _this.createChild(__WEBPACK_IMPORTED_MODULE_1__core_elements_Button__[\"a\" /* Button */]);\r\n        plusButton.shouldClone = false;\r\n        plusButton.label.text = \"+\";\r\n        plusButton.width = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__[\"c\" /* percent */])(100);\r\n        plusButton.padding(5, 5, 5, 5);\r\n        _this.plusButton = plusButton;\r\n        var slider = _this.createChild(__WEBPACK_IMPORTED_MODULE_0__core_Container__[\"a\" /* Container */]);\r\n        slider.shouldClone = false;\r\n        slider.width = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__[\"c\" /* percent */])(100);\r\n        slider.background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        slider.background.fillOpacity = 0.05;\r\n        slider.background.events.on(\"hit\", _this.handleBackgroundClick, _this);\r\n        slider.events.on(\"sizechanged\", _this.updateThumbSize, _this);\r\n        _this.slider = slider;\r\n        var thumb = slider.createChild(__WEBPACK_IMPORTED_MODULE_1__core_elements_Button__[\"a\" /* Button */]);\r\n        thumb.shouldClone = false;\r\n        thumb.padding(0, 0, 0, 0);\r\n        thumb.draggable = true;\r\n        thumb.events.on(\"drag\", _this.handleThumbDrag, _this);\r\n        _this.thumb = thumb;\r\n        var minusButton = _this.createChild(__WEBPACK_IMPORTED_MODULE_1__core_elements_Button__[\"a\" /* Button */]);\r\n        minusButton.shouldClone = false;\r\n        minusButton.label.text = \"-\";\r\n        minusButton.padding(5, 5, 5, 5);\r\n        _this.minusButton = minusButton;\r\n        // Set roles\r\n        _this.thumb.role = \"slider\";\r\n        _this.thumb.readerLive = \"polite\";\r\n        // Set reader text\r\n        _this.thumb.readerTitle = _this.language.translate(\"Use arrow keys to zoom in and out\");\r\n        _this.minusButton.readerTitle = _this.language.translate(\"Press ENTER to zoom in\");\r\n        _this.plusButton.readerTitle = _this.language.translate(\"Press ENTER to zoom out\");\r\n        _this.applyTheme();\r\n        _this.events.on(\"propertychanged\", function (event) {\r\n            if (event.property == \"layout\") {\r\n                _this.fixLayout();\r\n            }\r\n        });\r\n        _this._disposers.push(_this._chart);\r\n        _this.fixLayout();\r\n        return _this;\r\n    }\r\n    ZoomControl.prototype.fixLayout = function () {\r\n        if (this.layout == \"vertical\") {\r\n            this.width = 40;\r\n            this.height = undefined;\r\n            this.minusButton.width = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.thumb.width = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.plusButton.width = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.slider.width = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.minusButton.marginTop = 1;\r\n            this.plusButton.marginBottom = 2;\r\n            this.slider.height = 0;\r\n            this.minusButton.toFront();\r\n            this.plusButton.toBack();\r\n            this.thumb.minX = 0;\r\n            this.thumb.maxX = 0;\r\n            this.thumb.minY = 0;\r\n        }\r\n        else if (this.layout == \"horizontal\") {\r\n            this.thumb.minX = 0;\r\n            this.thumb.minY = 0;\r\n            this.thumb.maxY = 0;\r\n            this.height = 40;\r\n            this.width = undefined;\r\n            this.minusButton.height = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.minusButton.width = 30;\r\n            this.thumb.height = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.thumb.width = undefined;\r\n            this.plusButton.height = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.plusButton.width = 30;\r\n            this.slider.height = Object(__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__[\"c\" /* percent */])(100);\r\n            this.slider.width = 0;\r\n            this.minusButton.marginLeft = 2;\r\n            this.plusButton.marginRight = 2;\r\n            this.minusButton.toBack();\r\n            this.plusButton.toFront();\r\n        }\r\n    };\r\n    /**\r\n     * Handles zoom operation after clicking on the slider background.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {AMEvent<Sprite, ISpriteEvents>[\"hit\"]}  event  Event\r\n     */\r\n    ZoomControl.prototype.handleBackgroundClick = function (event) {\r\n        var sprite = event.target;\r\n        var y = event.spritePoint.y;\r\n        var chart = this.chart;\r\n        var maxPower = Math.log(chart.maxZoomLevel) / Math.LN2;\r\n        var minPower = Math.log(chart.minZoomLevel) / Math.LN2;\r\n        var power = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));\r\n        var zoomLevel = Math.pow(2, power);\r\n        chart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);\r\n    };\r\n    Object.defineProperty(ZoomControl.prototype, \"chart\", {\r\n        /**\r\n         * @return {MapChart} Map/chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A main chart/map that this zoom control is for.\r\n         *\r\n         * @param {MapChart}  chart  Map/chart\r\n         */\r\n        set: function (chart) {\r\n            var _this = this;\r\n            this._chart.set(chart, new __WEBPACK_IMPORTED_MODULE_3__core_utils_Disposer__[\"c\" /* MultiDisposer */]([\r\n                chart.events.on(\"maxsizechanged\", this.updateThumbSize, this),\r\n                chart.events.on(\"zoomlevelchanged\", this.updateThumb, this),\r\n                this.minusButton.events.on(\"hit\", function () { chart.zoomOut(chart.zoomGeoPoint); }, chart),\r\n                Object(__WEBPACK_IMPORTED_MODULE_5__core_interaction_Interaction__[\"b\" /* getInteraction */])().body.events.on(\"keyup\", function (ev) {\r\n                    if (_this.topParent.hasFocused) {\r\n                        if (__WEBPACK_IMPORTED_MODULE_4__core_utils_Keyboard__[\"b\" /* keyboard */].isKey(ev.event, \"enter\")) {\r\n                            if (_this.minusButton.isFocused) {\r\n                                chart.zoomOut();\r\n                            }\r\n                            else if (_this.plusButton.isFocused) {\r\n                                chart.zoomIn();\r\n                            }\r\n                        }\r\n                        else if (__WEBPACK_IMPORTED_MODULE_4__core_utils_Keyboard__[\"b\" /* keyboard */].isKey(ev.event, \"plus\")) {\r\n                            chart.zoomIn();\r\n                        }\r\n                        else if (__WEBPACK_IMPORTED_MODULE_4__core_utils_Keyboard__[\"b\" /* keyboard */].isKey(ev.event, \"minus\")) {\r\n                            chart.zoomOut();\r\n                        }\r\n                    }\r\n                }, chart),\r\n                this.plusButton.events.on(\"hit\", function () { chart.zoomIn(chart.zoomGeoPoint); }, chart)\r\n            ]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the slider's thumb size based on the available zoom space.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.updateThumbSize = function () {\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            var slider = this.slider;\r\n            var thumb = this.thumb;\r\n            if (this.layout == \"vertical\") {\r\n                thumb.minHeight = Math.min(this.slider.pixelHeight, 20);\r\n                thumb.height = slider.pixelHeight / (chart.maxZoomLevel - chart.minZoomLevel);\r\n                thumb.maxY = slider.pixelHeight - thumb.pixelHeight;\r\n                if (thumb.pixelHeight <= 1) {\r\n                    thumb.visible = false;\r\n                }\r\n                else {\r\n                    thumb.visible = true;\r\n                }\r\n            }\r\n            else {\r\n                thumb.minWidth = Math.min(this.slider.pixelWidth, 20);\r\n                thumb.width = slider.pixelWidth / (chart.maxZoomLevel - chart.minZoomLevel);\r\n                thumb.maxX = slider.pixelWidth - thumb.pixelWidth;\r\n                if (thumb.pixelWidth <= 1) {\r\n                    thumb.visible = false;\r\n                }\r\n                else {\r\n                    thumb.visible = true;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates thumb according to current zoom position from map.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.updateThumb = function () {\r\n        var slider = this.slider;\r\n        var chart = this.chart;\r\n        var thumb = this.thumb;\r\n        if (!thumb.isDown) {\r\n            var step = Math.log(chart.zoomLevel) / Math.LN2;\r\n            if (this.layout == \"vertical\") {\r\n                thumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * (step + 1) / this.stepCount;\r\n            }\r\n            else {\r\n                thumb.x = slider.pixelWidth * step / this.stepCount;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Zooms the actual map when slider position changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.handleThumbDrag = function () {\r\n        var slider = this.slider;\r\n        var chart = this.chart;\r\n        var thumb = this.thumb;\r\n        var step;\r\n        if (this.layout == \"vertical\") {\r\n            step = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight) - 1;\r\n        }\r\n        else {\r\n            step = this.stepCount * thumb.pixelX / slider.pixelWidth;\r\n        }\r\n        var zoomLevel = Math.pow(2, step);\r\n        chart.zoomToGeoPoint(undefined, zoomLevel, false, 0);\r\n    };\r\n    Object.defineProperty(ZoomControl.prototype, \"stepCount\", {\r\n        /**\r\n         * Returns the step countfor the slider grid according to map's min and max\r\n         * zoom level settings.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return {number} Step count\r\n         */\r\n        get: function () {\r\n            return Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a background element for slider control.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return {this} Background\r\n     */\r\n    ZoomControl.prototype.createBackground = function () {\r\n        return new __WEBPACK_IMPORTED_MODULE_2__core_elements_RoundedRectangle__[\"a\" /* RoundedRectangle */]();\r\n    };\r\n    return ZoomControl;\r\n}(__WEBPACK_IMPORTED_MODULE_0__core_Container__[\"a\" /* Container */]));\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\n__WEBPACK_IMPORTED_MODULE_7__core_Registry__[\"b\" /* registry */].registeredClasses[\"ZoomControl\"] = ZoomControl;\r\n//# sourceMappingURL=ZoomControl.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 3.js","/**\r\n * Defines default Responsive rules\r\n * @hidden\r\n */\r\nimport { AxisRenderer } from \"../../charts/axes/AxisRenderer\";\r\nimport { AxisRendererX } from \"../../charts/axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../../charts/axes/AxisRendererY\";\r\nimport { AxisRendererCircular } from \"../../charts/axes/AxisRendererCircular\";\r\nimport { Chart } from \"../../charts/Chart\";\r\nimport { Legend } from \"../../charts/Legend\";\r\nimport { SmallMap } from \"../../charts/map/SmallMap\";\r\nimport { ZoomControl } from \"../../charts/map/ZoomControl\";\r\n/**\r\n * ============================================================================\r\n * RULES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Default rules.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Do not create states for objects that do not have any overrides\r\n */\r\nexport default [\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Microcharts and sparklines\r\n     * W<=100 || H<=100\r\n     * @todo\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 100) || (container.pixelHeight <= 100)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof AxisRenderer) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.minLabelPosition = 1;\r\n                state.properties.maxLabelPosition = 0;\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Narrow\r\n     * W<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof AxisRendererY) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof AxisRendererCircular) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof SmallMap) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            /*if (object instanceof Container && object.parent instanceof ZoomControl && !(object instanceof Button)) {\r\n                let state = object.states.create(stateId);\r\n                state.properties.height = 0;\r\n                return state;\r\n            }*/\r\n            if (object instanceof ZoomControl) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.layout = \"vertical\";\r\n                return state;\r\n            }\r\n            if (object instanceof Chart) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.marginLeft = 0;\r\n                state.properties.marginRight = 0;\r\n                return state;\r\n            }\r\n            if (object instanceof Legend && (object.position == \"left\" || object.position == \"right\")) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.position = \"bottom\";\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Short\r\n     * H<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelHeight <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Put vertical axis labels inside\r\n            if (object instanceof AxisRendererX) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof AxisRendererCircular) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.inside = true;\r\n                return state;\r\n            }\r\n            if (object instanceof SmallMap) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            /*if (object instanceof Container && object.parent instanceof ZoomControl && !(object instanceof Button)) {\r\n                let state = object.states.create(stateId);\r\n                state.properties.width = 100;\r\n                return state;\r\n            }*/\r\n            if (object instanceof ZoomControl) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.layout = \"horizontal\";\r\n                return state;\r\n            }\r\n            if (object instanceof Chart) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.marginTop = 0;\r\n                state.properties.marginBottom = 0;\r\n                return state;\r\n            }\r\n            if (object instanceof Legend && (object.position == \"bottom\" || object.position == \"top\")) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.position = \"right\";\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    },\r\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Super-small\r\n     * W<=200 && H<=200\r\n     */\r\n    {\r\n        relevant: function (container) {\r\n            if ((container.pixelWidth <= 200) && (container.pixelHeight <= 200)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        state: function (object, stateId) {\r\n            // Hide legend\r\n            if (object instanceof Legend) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            if (object instanceof ZoomControl) {\r\n                var state = object.states.create(stateId);\r\n                state.properties.disabled = true;\r\n                return state;\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n];\r\n//# sourceMappingURL=ResponsiveDefaults.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@amcharts/amcharts4/.internal/core/responsive/ResponsiveDefaults.js\n// module id = 245\n// module chunks = 3","/**\r\n * A module for the mini-map control.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"bird's eye\" view of the whole map.\r\n *\r\n * This control creates a mini-map with the whole of the map, highlighting\r\n * the area which is in the current viewport of the map map.\r\n *\r\n * @see {@link ISmallMapEvents} for a list of available events\r\n * @see {@link ISmallMapAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar SmallMap = /** @class */ (function (_super) {\r\n    __extends(SmallMap, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SmallMap() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A target map.\r\n         *\r\n         * @type {MutableValueDisposer<MapChart>}\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"SmallMap\";\r\n        // Set defaults\r\n        _this.align = \"left\";\r\n        _this.valign = \"bottom\";\r\n        _this.percentHeight = 20;\r\n        _this.percentWidth = 20;\r\n        _this.margin(5, 5, 5, 5);\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Set background defailts\r\n        _this.background.fillOpacity = 0.9;\r\n        _this.background.fill = interfaceColors.getFor(\"background\");\r\n        // Set up events\r\n        _this.events.on(\"hit\", _this.moveToPosition, _this);\r\n        _this.events.on(\"maxsizechanged\", _this.updateMapSize, _this);\r\n        // Create a container\r\n        _this.seriesContainer = _this.createChild(Container);\r\n        _this.seriesContainer.shouldClone = false;\r\n        // Create an outline rectangle\r\n        var rectangle = _this.createChild(Rectangle);\r\n        rectangle.shouldClone = false;\r\n        rectangle.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n        rectangle.strokeWidth = 1;\r\n        rectangle.strokeOpacity = 0.5;\r\n        rectangle.fill = color(); //\"none\";\r\n        rectangle.verticalCenter = \"middle\";\r\n        rectangle.horizontalCenter = \"middle\";\r\n        rectangle.isMeasured = false;\r\n        _this.rectangle = rectangle;\r\n        _this._disposers.push(_this._chart);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SmallMap.prototype, \"series\", {\r\n        /**\r\n         * A list of map series used to draw the mini-map.\r\n         *\r\n         * @readonly\r\n         * @return {List<MapSeries>} Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new List();\r\n                this._series.events.on(\"insert\", this.handleSeriesAdded, this);\r\n                this._series.events.on(\"remove\", this.handleSeriesRemoved, this);\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new series when they are pushed into a `series` list.\r\n     *\r\n     * @param {IListEvents<MapSeries>[\"insert\"]} event Event\r\n     */\r\n    SmallMap.prototype.handleSeriesAdded = function (event) {\r\n        var series = event.newValue;\r\n        if (this.chart.series.contains(series)) {\r\n            var newSeries = series.clone();\r\n            this._series.removeValue(series);\r\n            this._series.push(newSeries);\r\n            series = newSeries;\r\n            this.chart.dataUsers.push(newSeries);\r\n        }\r\n        series.chart = this.chart;\r\n        series.parent = this.seriesContainer;\r\n        series.interactionsEnabled = false;\r\n    };\r\n    /**\r\n     * Cleans up after series are removed from Scrollbar.\r\n     *\r\n     * @param {IListEvents<XYSeries>[\"remove\"]}  event  Event\r\n     */\r\n    SmallMap.prototype.handleSeriesRemoved = function (event) {\r\n        //let sourceSeries: MapSeries = event.oldValue;\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Moves main map pan position after click on the small map.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {AMEvent<Sprite, ISpriteEvents>[\"hit\"]}  event  Event\r\n     */\r\n    SmallMap.prototype.moveToPosition = function (event) {\r\n        var svgPoint = event.svgPoint;\r\n        var rectPoint = $utils.svgPointToSprite(svgPoint, this.rectangle);\r\n        var zoomLevel = this.chart.zoomLevel;\r\n        var scale = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n        var x = (rectPoint.x + this.rectangle.pixelWidth / 2) / scale * zoomLevel;\r\n        var y = (rectPoint.y + this.rectangle.pixelHeight / 2) / scale * zoomLevel;\r\n        var geoPoint = this.chart.svgPointToGeo({ x: x, y: y });\r\n        this.chart.zoomToGeoPoint(geoPoint, this.chart.zoomLevel, true);\r\n    };\r\n    Object.defineProperty(SmallMap.prototype, \"chart\", {\r\n        /**\r\n         * @return {MapChart} Chart/map\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart/map that this control is meant for.\r\n         *\r\n         * @param {MapChart}  chart  Chart/map\r\n         */\r\n        set: function (chart) {\r\n            if (this.chart != chart) {\r\n                this._chart.set(chart, new MultiDisposer([\r\n                    chart.events.on(\"zoomlevelchanged\", this.updateRectangle, this),\r\n                    chart.events.on(\"mappositionchanged\", this.updateRectangle, this),\r\n                    chart.events.on(\"scaleratiochanged\", this.updateMapSize, this)\r\n                ]));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the viewport recangle as per current map zoom/pan position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SmallMap.prototype.updateRectangle = function () {\r\n        var chart = this.chart;\r\n        var zoomLevel = chart.zoomLevel;\r\n        var rectangle = this.rectangle;\r\n        rectangle.width = this.pixelWidth / zoomLevel;\r\n        rectangle.height = this.pixelHeight / zoomLevel;\r\n        var scale = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n        var seriesContainer = chart.seriesContainer;\r\n        var x = Math.ceil((zoomLevel * seriesContainer.pixelWidth / 2 - seriesContainer.pixelX) * scale / zoomLevel + rectangle.pixelWidth / 2);\r\n        var y = Math.ceil((zoomLevel * seriesContainer.pixelHeight / 2 - seriesContainer.pixelY) * scale / zoomLevel + rectangle.pixelHeight / 2);\r\n        rectangle.x = x;\r\n        rectangle.y = y;\r\n    };\r\n    /**\r\n     * Update map size so that internal elements can redraw themselves after\r\n     * the size of the small map changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SmallMap.prototype.updateMapSize = function () {\r\n        if (this.chart) {\r\n            this.seriesContainer.scale = this.chart.scaleRatio * Math.min(this.percentWidth, this.percentHeight) / 100;\r\n            this.afterDraw();\r\n        }\r\n    };\r\n    /**\r\n     * Update elements after drawing the small map.\r\n     */\r\n    SmallMap.prototype.afterDraw = function () {\r\n        _super.prototype.afterDraw.call(this);\r\n        this.seriesContainer.moveTo({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 });\r\n        this.rectangle.maskRectangle = { x: -1, y: -1, width: Math.ceil(this.pixelWidth + 2), height: Math.ceil(this.pixelHeight + 2) };\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {object}  config  Config\r\n     */\r\n    SmallMap.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up series\r\n            if ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    var series = config.series[i];\r\n                    if ($type.hasValue(series) && $type.isString(series) && this.map.hasKey(series)) {\r\n                        config.series[i] = this.map.getKey(series);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return SmallMap;\r\n}(Container));\r\nexport { SmallMap };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SmallMap\"] = SmallMap;\r\n//# sourceMappingURL=SmallMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js\n// module id = 259\n// module chunks = 3","/**\r\n * Zoom control module\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { Button } from \"../../core/elements/Button\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a control for zooming the map.\r\n *\r\n * @see {@link IZoomControlEvents} for a list of available events\r\n * @see {@link IZoomControlAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ZoomControl = /** @class */ (function (_super) {\r\n    __extends(ZoomControl, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ZoomControl() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A target map.\r\n         *\r\n         * @type {MutableValueDisposer<MapChart>}\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"ZoomControl\";\r\n        _this.align = \"right\";\r\n        _this.valign = \"bottom\";\r\n        _this.layout = \"vertical\";\r\n        _this.padding(5, 5, 5, 5);\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var plusButton = _this.createChild(Button);\r\n        plusButton.shouldClone = false;\r\n        plusButton.label.text = \"+\";\r\n        plusButton.width = percent(100);\r\n        plusButton.padding(5, 5, 5, 5);\r\n        _this.plusButton = plusButton;\r\n        var slider = _this.createChild(Container);\r\n        slider.shouldClone = false;\r\n        slider.width = percent(100);\r\n        slider.background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        slider.background.fillOpacity = 0.05;\r\n        slider.background.events.on(\"hit\", _this.handleBackgroundClick, _this);\r\n        slider.events.on(\"sizechanged\", _this.updateThumbSize, _this);\r\n        _this.slider = slider;\r\n        var thumb = slider.createChild(Button);\r\n        thumb.shouldClone = false;\r\n        thumb.padding(0, 0, 0, 0);\r\n        thumb.draggable = true;\r\n        thumb.events.on(\"drag\", _this.handleThumbDrag, _this);\r\n        _this.thumb = thumb;\r\n        var minusButton = _this.createChild(Button);\r\n        minusButton.shouldClone = false;\r\n        minusButton.label.text = \"-\";\r\n        minusButton.padding(5, 5, 5, 5);\r\n        _this.minusButton = minusButton;\r\n        // Set roles\r\n        _this.thumb.role = \"slider\";\r\n        _this.thumb.readerLive = \"polite\";\r\n        // Set reader text\r\n        _this.thumb.readerTitle = _this.language.translate(\"Use arrow keys to zoom in and out\");\r\n        _this.minusButton.readerTitle = _this.language.translate(\"Press ENTER to zoom in\");\r\n        _this.plusButton.readerTitle = _this.language.translate(\"Press ENTER to zoom out\");\r\n        _this.applyTheme();\r\n        _this.events.on(\"propertychanged\", function (event) {\r\n            if (event.property == \"layout\") {\r\n                _this.fixLayout();\r\n            }\r\n        });\r\n        _this._disposers.push(_this._chart);\r\n        _this.fixLayout();\r\n        return _this;\r\n    }\r\n    ZoomControl.prototype.fixLayout = function () {\r\n        if (this.layout == \"vertical\") {\r\n            this.width = 40;\r\n            this.height = undefined;\r\n            this.minusButton.width = percent(100);\r\n            this.thumb.width = percent(100);\r\n            this.plusButton.width = percent(100);\r\n            this.slider.width = percent(100);\r\n            this.minusButton.marginTop = 1;\r\n            this.plusButton.marginBottom = 2;\r\n            this.slider.height = 0;\r\n            this.minusButton.toFront();\r\n            this.plusButton.toBack();\r\n            this.thumb.minX = 0;\r\n            this.thumb.maxX = 0;\r\n            this.thumb.minY = 0;\r\n        }\r\n        else if (this.layout == \"horizontal\") {\r\n            this.thumb.minX = 0;\r\n            this.thumb.minY = 0;\r\n            this.thumb.maxY = 0;\r\n            this.height = 40;\r\n            this.width = undefined;\r\n            this.minusButton.height = percent(100);\r\n            this.minusButton.width = 30;\r\n            this.thumb.height = percent(100);\r\n            this.thumb.width = undefined;\r\n            this.plusButton.height = percent(100);\r\n            this.plusButton.width = 30;\r\n            this.slider.height = percent(100);\r\n            this.slider.width = 0;\r\n            this.minusButton.marginLeft = 2;\r\n            this.plusButton.marginRight = 2;\r\n            this.minusButton.toBack();\r\n            this.plusButton.toFront();\r\n        }\r\n    };\r\n    /**\r\n     * Handles zoom operation after clicking on the slider background.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param {AMEvent<Sprite, ISpriteEvents>[\"hit\"]}  event  Event\r\n     */\r\n    ZoomControl.prototype.handleBackgroundClick = function (event) {\r\n        var sprite = event.target;\r\n        var y = event.spritePoint.y;\r\n        var chart = this.chart;\r\n        var maxPower = Math.log(chart.maxZoomLevel) / Math.LN2;\r\n        var minPower = Math.log(chart.minZoomLevel) / Math.LN2;\r\n        var power = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));\r\n        var zoomLevel = Math.pow(2, power);\r\n        chart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);\r\n    };\r\n    Object.defineProperty(ZoomControl.prototype, \"chart\", {\r\n        /**\r\n         * @return {MapChart} Map/chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A main chart/map that this zoom control is for.\r\n         *\r\n         * @param {MapChart}  chart  Map/chart\r\n         */\r\n        set: function (chart) {\r\n            var _this = this;\r\n            this._chart.set(chart, new MultiDisposer([\r\n                chart.events.on(\"maxsizechanged\", this.updateThumbSize, this),\r\n                chart.events.on(\"zoomlevelchanged\", this.updateThumb, this),\r\n                this.minusButton.events.on(\"hit\", function () { chart.zoomOut(chart.zoomGeoPoint); }, chart),\r\n                getInteraction().body.events.on(\"keyup\", function (ev) {\r\n                    if (_this.topParent.hasFocused) {\r\n                        if (keyboard.isKey(ev.event, \"enter\")) {\r\n                            if (_this.minusButton.isFocused) {\r\n                                chart.zoomOut();\r\n                            }\r\n                            else if (_this.plusButton.isFocused) {\r\n                                chart.zoomIn();\r\n                            }\r\n                        }\r\n                        else if (keyboard.isKey(ev.event, \"plus\")) {\r\n                            chart.zoomIn();\r\n                        }\r\n                        else if (keyboard.isKey(ev.event, \"minus\")) {\r\n                            chart.zoomOut();\r\n                        }\r\n                    }\r\n                }, chart),\r\n                this.plusButton.events.on(\"hit\", function () { chart.zoomIn(chart.zoomGeoPoint); }, chart)\r\n            ]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the slider's thumb size based on the available zoom space.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.updateThumbSize = function () {\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            var slider = this.slider;\r\n            var thumb = this.thumb;\r\n            if (this.layout == \"vertical\") {\r\n                thumb.minHeight = Math.min(this.slider.pixelHeight, 20);\r\n                thumb.height = slider.pixelHeight / (chart.maxZoomLevel - chart.minZoomLevel);\r\n                thumb.maxY = slider.pixelHeight - thumb.pixelHeight;\r\n                if (thumb.pixelHeight <= 1) {\r\n                    thumb.visible = false;\r\n                }\r\n                else {\r\n                    thumb.visible = true;\r\n                }\r\n            }\r\n            else {\r\n                thumb.minWidth = Math.min(this.slider.pixelWidth, 20);\r\n                thumb.width = slider.pixelWidth / (chart.maxZoomLevel - chart.minZoomLevel);\r\n                thumb.maxX = slider.pixelWidth - thumb.pixelWidth;\r\n                if (thumb.pixelWidth <= 1) {\r\n                    thumb.visible = false;\r\n                }\r\n                else {\r\n                    thumb.visible = true;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates thumb according to current zoom position from map.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.updateThumb = function () {\r\n        var slider = this.slider;\r\n        var chart = this.chart;\r\n        var thumb = this.thumb;\r\n        if (!thumb.isDown) {\r\n            var step = Math.log(chart.zoomLevel) / Math.LN2;\r\n            if (this.layout == \"vertical\") {\r\n                thumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * (step + 1) / this.stepCount;\r\n            }\r\n            else {\r\n                thumb.x = slider.pixelWidth * step / this.stepCount;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Zooms the actual map when slider position changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ZoomControl.prototype.handleThumbDrag = function () {\r\n        var slider = this.slider;\r\n        var chart = this.chart;\r\n        var thumb = this.thumb;\r\n        var step;\r\n        if (this.layout == \"vertical\") {\r\n            step = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight) - 1;\r\n        }\r\n        else {\r\n            step = this.stepCount * thumb.pixelX / slider.pixelWidth;\r\n        }\r\n        var zoomLevel = Math.pow(2, step);\r\n        chart.zoomToGeoPoint(undefined, zoomLevel, false, 0);\r\n    };\r\n    Object.defineProperty(ZoomControl.prototype, \"stepCount\", {\r\n        /**\r\n         * Returns the step countfor the slider grid according to map's min and max\r\n         * zoom level settings.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return {number} Step count\r\n         */\r\n        get: function () {\r\n            return Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a background element for slider control.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return {this} Background\r\n     */\r\n    ZoomControl.prototype.createBackground = function () {\r\n        return new RoundedRectangle();\r\n    };\r\n    return ZoomControl;\r\n}(Container));\r\nexport { ZoomControl };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomControl\"] = ZoomControl;\r\n//# sourceMappingURL=ZoomControl.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@amcharts/amcharts4/.internal/charts/map/ZoomControl.js\n// module id = 260\n// module chunks = 3"],"sourceRoot":""}